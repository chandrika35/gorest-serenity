{"name":"test001","id":"com.gorest.gorestinfo.GoRestCRUDTestWithSteps:test001","testCaseName":"com.gorest.gorestinfo.GoRestCRUDTestWithSteps","testSteps":[{"number":1,"description":"Getting all users records","duration":172,"startTime":"2023-06-03T20:31:00.037+01:00[Europe/London]","exception":{"errorType":"java.lang.IllegalArgumentException","message":"baseURI cannot be null","stackTrace":[{"declaringClass":"io.restassured.internal.assertion.AssertParameter","methodName":"notNull","fileName":"AssertParameter.groovy","lineNumber":26},{"declaringClass":"io.restassured.internal.RequestSpecificationImpl","methodName":"\u003cinit\u003e","fileName":"RequestSpecificationImpl.groovy","lineNumber":132},{"declaringClass":"io.restassured.RestAssured","methodName":"createTestSpecification","fileName":"RestAssured.java","lineNumber":1492},{"declaringClass":"io.restassured.RestAssured","methodName":"given","fileName":"RestAssured.java","lineNumber":711},{"declaringClass":"net.serenitybdd.rest.SerenityRest","methodName":"given","fileName":"SerenityRest.java","lineNumber":211},{"declaringClass":"com.gorest.gorestinfo.GoRestSteps","methodName":"getUserIDs","fileName":"GoRestSteps.java","lineNumber":30},{"declaringClass":"com.gorest.gorestinfo.GoRestCRUDTestWithSteps","methodName":"test001","fileName":"GoRestCRUDTestWithSteps.java","lineNumber":35}]},"result":"ERROR","precondition":false}],"userStory":{"id":"com.gorest.gorestinfo.GoRestCRUDTestWithSteps","storyName":"Go rest CRUD test with steps","storyClassName":"com.gorest.gorestinfo.GoRestCRUDTestWithSteps","path":"com.gorest.gorestinfo","type":"story"},"featureTag":{"name":"Gorestinfo/Go rest CRUD test with steps","type":"story"},"title":"This method will get all users records","tags":[{"name":"Gorestinfo/Go rest CRUD test with steps","type":"story"}],"startTime":"2023-06-03T20:30:59.828+01:00[Europe/London]","duration":399,"testFailureCause":{"errorType":"java.lang.IllegalArgumentException","message":"baseURI cannot be null","stackTrace":[{"declaringClass":"io.restassured.internal.assertion.AssertParameter","methodName":"notNull","fileName":"AssertParameter.groovy","lineNumber":26},{"declaringClass":"io.restassured.internal.RequestSpecificationImpl","methodName":"\u003cinit\u003e","fileName":"RequestSpecificationImpl.groovy","lineNumber":132},{"declaringClass":"io.restassured.RestAssured","methodName":"createTestSpecification","fileName":"RestAssured.java","lineNumber":1492},{"declaringClass":"io.restassured.RestAssured","methodName":"given","fileName":"RestAssured.java","lineNumber":711},{"declaringClass":"net.serenitybdd.rest.SerenityRest","methodName":"given","fileName":"SerenityRest.java","lineNumber":211},{"declaringClass":"com.gorest.gorestinfo.GoRestSteps","methodName":"getUserIDs","fileName":"GoRestSteps.java","lineNumber":30},{"declaringClass":"com.gorest.gorestinfo.GoRestCRUDTestWithSteps","methodName":"test001","fileName":"GoRestCRUDTestWithSteps.java","lineNumber":35}]},"testFailureClassname":"java.lang.IllegalArgumentException","testFailureMessage":"baseURI cannot be null","testFailureSummary":"ERROR;java.lang.IllegalArgumentException;baseURI cannot be null;AssertParameter.groovy","projectKey":"","annotatedResult":"ERROR","manual":false,"testSource":"JUnit","result":"ERROR"}